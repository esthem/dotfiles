# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### IME
exec_always fcitx5 -d --replace

### Polkit Auth Agent
# exec lxpolkit -d --replace
exec /usr/lib/polkit-kde-authentication-agent-1 -d --replace

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term foot
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu fuzzel | xargs swaymsg exec --

# wlsunset
exec wlsunset -t 4500 -L 116.3 -l 39.9 > /dev/null 2>&1 &

# Clipman
exec wl-paste -t text --watch clipman store --no-persist
bindsym Mod4+Shift+v exec clipman pick --tool=CUSTOM --tool-args="fuzzel -d"

# ScreenShot
    # capture all screens to clipboard
    bindsym Print exec grim - | wl-copy
    # capture the specified screen area to clipboard
    bindsym Mod4+Shift+S exec grim -g "$(slurp)" - | wl-copy

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /usr/share/wallpapers/Shell/contents/images/5120x2880.jpg fill

# output * bg /home/wenhan/Pictures/Wallpapers/wallhaven-zyr8gw.jpg fill
output * bg /home/wenhan/Pictures/Wallpapers/wallhaven-5wz9p9.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace 1:1.Home 
    bindsym $mod+2 workspace 2:2.Web
    bindsym $mod+3 workspace 3:3.Code
    bindsym $mod+4 workspace 4:4.Tool
    bindsym $mod+5 workspace 5:5.Media
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace 1:1.Home
    bindsym $mod+Shift+2 move container to workspace 2:2.Web
    bindsym $mod+Shift+3 move container to workspace 3:3.Code
    bindsym $mod+Shift+4 move container to workspace 4:4.Tool
    bindsym $mod+Shift+5 move container to workspace 5:5.Media
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#

# Default Window Type
    for_window [window_role="pop-up"] floating enable
    for_window [window_role="bubble"] floating enable
    for_window [window_role="task_dialog"] floating enable
    for_window [window_role="Preferences"] floating enable
    for_window [window_type="dialog"] floating enable
    for_window [window_type="menu"] floating enable
    for_window [window_role="About"] floating enable
    for_window [class="xdg-desktop-portal-kde"] floating enable
    for_window [class="ksysguard"] floating enable
    for_window [class="ksysguard"] sticky enable
    for_window [app_id="mpv"] layout tabbed
    for_window [class="Wine"] floating enable
    for_window [app_id="lutris"] floating enable
    for_window [instance="Godot_Engine"] floating enable
    for_window [app_id="bevy"] floating enable
    for_window [class="Unity"] floating enable

# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"


# bemoji EmojiPicker
bindsym Mod4+Shift+p exec bemoji -t

# Keyboard Volume Control
bindsym XF86AudioRaiseVolume exec volumectl -u up
bindsym XF86AudioLowerVolume exec volumectl -u down
bindsym XF86AudioMute exec volumectl toggle-mute
bindsym XF86AudioMicMute exec volumectl -m toggle-mute
exec "avizo-service"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {

    swaybar_command waybar
}

font pango: monospace 0.002
titlebar_border_thickness 0
titlebar_padding 0

# TokyoNight theme
# Property Name             Border  BG      Text    Indicator Child-border
# client.focused              #0a0b16 #2f343f #4477ff #4477ff   #2f343f
# client.focused_inactive     #2f343f #2f343f #d8dee8 #2f343f   #2f343f
# client.unfocused            #2f343f #2f343f #d8dee8 #2f343f   #2f343f
# client.urgent               #2f343f #2f343f #d8dee8 #2f343f   #2f343f
# client.placeholder          #2f343f #2f343f #d8dee8 #2f343f   #2f343f

# Set Windows Opacity
bindsym Mod4+Alt+7 exec swaymsg opacity 0.7
bindsym Mod4+Alt+8 exec swaymsg opacity 0.8
bindsym Mod4+Alt+9 exec swaymsg opacity 0.9
bindsym Mod4+Alt+0 exec swaymsg opacity 1

include /etc/sway/config.d/*
